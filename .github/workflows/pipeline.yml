name: Project Deployment

on:
  push:
    branches:
      - master

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  DOCKERFILE_PATH: Dockerfile
  IMAGE_TAG: latest

permissions: write-all
jobs:
  config-env-pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        id: Checkout
        uses: actions/checkout@v4

      - name: Environment configuration keys
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

  deploy-resource:
    runs-on: ubuntu-latest
    needs: [config-env-pipeline]
    name: Application-Deployment
    steps:
      - name: Checkout the files
        uses: actions/checkout@v3

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Replace AppSettings
        shell: bash
        run: |
          sed -i -e 's/@TAG/${{github.sha}}/' docker-compose.yml;
          cat docker-compose.yml;

      - name: Build, tag, and push docker image to Amazon ECR Public
        shell: bash
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          ECR_REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "Pushing image to ECR...";
          docker push --all-tags $ECR_REGISTRY/$ECR_REPOSITORY;